{"version":3,"file":"CoLangError.js","names":["CoLangError","args","message","name","source","line","column","recognizer","offendingSymbol","e","Error"],"sources":["../src/CoLangError.ts"],"sourcesContent":["import type RecognitionException from 'antlr4/error/RecognitionException';\nimport type Recognizer from 'antlr4/Recognizer';\nimport type Token from 'antlr4/Token';\nimport { ESource } from './types';\n\ninterface ICoLangError {\n  message: string;\n  source: ESource;\n  line?: number;\n  column?: number;\n  recognizer?: Recognizer;\n  offendingSymbol?: Token;\n  e?: RecognitionException;\n}\n\nexport class CoLangError extends Error implements ICoLangError {\n  source: ESource;\n  line?: number;\n  column?: number;\n  recognizer?: Recognizer;\n  offendingSymbol?: Token;\n  e?: RecognitionException;\n\n  constructor(args: ICoLangError) {\n    super(args.message);\n    this.name = 'CoLangError';\n    this.source = args.source;\n    this.line = args.line;\n    this.column = args.column;\n    this.recognizer = args.recognizer;\n    this.offendingSymbol = args.offendingSymbol;\n    this.e = args.e;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAeaA,WAAW;EAAA;EAAA;EAQtB,qBAAYC,IAAkB,EAAE;IAAA;IAAA;IAC9B,0BAAMA,IAAI,CAACC,OAAO;IAClB,MAAKC,IAAI,GAAG,aAAa;IACzB,MAAKC,MAAM,GAAGH,IAAI,CAACG,MAAM;IACzB,MAAKC,IAAI,GAAGJ,IAAI,CAACI,IAAI;IACrB,MAAKC,MAAM,GAAGL,IAAI,CAACK,MAAM;IACzB,MAAKC,UAAU,GAAGN,IAAI,CAACM,UAAU;IACjC,MAAKC,eAAe,GAAGP,IAAI,CAACO,eAAe;IAC3C,MAAKC,CAAC,GAAGR,IAAI,CAACQ,CAAC;IAAC;EAClB;EAAC;AAAA,iCAjB8BC,KAAK;AAAA"}